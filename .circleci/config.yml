version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  build_and_deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      ECR_REPOSITORY_NAME: bookingsystem
      FULL_IMAGE_NAME: 857544276754.dkr.ecr.us-east-1.amazonaws.com/bookingsystem:latest
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: bookingsystem-{{ checksum "BackEnd/BookingSystem/pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
              - ~/.m2
          key: bookingsystem-{{ checksum "BackEnd/BookingSystem/pom.xml" }}
          
      - run:
          name: Build Maven
          command: |
            cd BackEnd/BookingSystem
            mvn package
         
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
            
      - run:
          name: Build image
          command: |
            cd BackEnd/BookingSystem
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            #make credentials
            #mkdir ~/.aws/
            #echo $AWS_CREDENTIALS > ~/.aws/credentials
            #cd ~/.aws/
            #dir
            #echo $AWS_CREDENTIALS
            
          
          
            cd ~/project/BackEnd/BookingSystem/
            dir
            
            
            #aws configure
            #aws configure set aws_access_key_id ASIA4PKM7HMJLYUOKC6Q
            #aws configure set aws_secret_access_key xgeF/d7t5LSG6gLuXb6bEHdkg2NOSp4Wl+i6+efi
            #aws configure set default.region us-east-1
            #aws configure set default.output json
            
            #aws ecr get-login-password --region us-east-1

            
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 857544276754.dkr.ecr.us-east-1.amazonaws.com
            docker push $FULL_IMAGE_NAME
workflows:
  build-deploy-qa:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: develop # develop is the most developed branch so we will deploy there for now

